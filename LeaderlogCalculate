# Script created by WISH Pool
# This script will show the stake pool's leaderlogs using the cncli tool
# created by Andrew Westberg. See https://github.com/cardano-community/cncli/
# for more information and for the latest documentation
# Note that this is a wrapper script to automate and make easier the use of
# the cncli tool by Andrew Westberg as well as present it in column format.
# Parts of the code are inspired from Andrew's documentation with improvements
# Next logs are only available 1.5 days before the end of the epoch. 
# This uses the new stake-snapshot approach which utilizes less memory
# Script has been updated to work in both mainnet and testnet
# Lines to be executed are echoed to screen for debugging purposes.
# The output will be saved to leaderlog-$EPOCH.out
# NOTE: 
# You may need to update directories and filenames to suit your environment
################################################################################

# Update these variables before running this script:
TICKER='WISH'        # Change to your pool Ticker
POOLID='4dbdfb68de96a563719f7df2b3cf7c98fb547a3e7edca2a547d35852'
                     # Change above to your Pool ID
PORT=61234           # Change to the port number of your BP
TZ='Asia/Singapore'  # Change to your Time Zone

echo Before proceeding, make sure Ticker, Pool ID, Port and Timezone are
echo correctly updated to your environment at the start of the script
echo -n Press Enter to continue or Ctrl-C to exit; read enter

echo Enter the environment you are working on:
echo [1] Mainnet
echo [2] Testnet
echo -n Enter the number of your choice: ; read environ
echo Thank you...

case "$environ" in
1) echo Mainnet selected
   ENVIRON='mainnet'
   MAGIC=''
   TMAGIC='--mainnet'
   ;;
2) echo Testnet selected
   ENVIRON='testnet'
   MAGIC='--network-magic 1097911063'
   TMAGIC='--testnet-magic 1097911063'
   ;;
*) echo Invalid choice selected
   exit 1
   ;;
esac

echo Now enter the epoch period you want the leaderlogs to display:
echo [1] Next
echo [2] Current
echo [3] Previous
echo -n Enter the number of your choice: ; read period
echo Please wait...

# Change the port number below to the port number of your BP
echo About to perform this command:
echo /usr/local/bin/cncli sync --host 127.0.0.1 --port $PORT --no-service $MAGIC
/usr/local/bin/cncli sync --host 127.0.0.1 --port $PORT --no-service $MAGIC

echo Calculating leaderlogs for $TICKER
SCMD="/usr/local/bin/cardano-cli query stake-snapshot --stake-pool-id $POOLID $TMAGIC"
echo About to perform this command:
echo $SCMD
SNAPSHOT=$($SCMD)case "$period" in

1) echo Next selected
   PERIOD='next'
   POOL_STAKE=$(jq .poolStakeMark <<< $SNAPSHOT)
   ACTIVE_STAKE=$(jq .activeStakeMark <<< $SNAPSHOT)
   ;;
2) echo Current selected
   PERIOD='current'
   POOL_STAKE=$(jq .poolStakeSet <<< $SNAPSHOT)
   ACTIVE_STAKE=$(jq .activeStakeSet <<< $SNAPSHOT)
   ;;
3) echo Previous selected
   PERIOD='prev'
   POOL_STAKE=$(jq .poolStakeGo <<< $SNAPSHOT)
   ACTIVE_STAKE=$(jq .activeStakeGo <<< $SNAPSHOT)
   ;;
*) echo Invalid choice selected
   exit 1
   ;;

esac

# Update file names below if you use different naming convention in your environment
LLOG=`/usr/local/bin/cncli leaderlog --pool-id $POOLID --pool-vrf-skey $NODE_HOME/vrf.skey --byron-genesis $NODE_HOME/${ENVIRON}-byron-genesis.json --shelley-genesis $NODE_HOME/${ENVIRON}-shelley-genesis.json --consensus praos --pool-stake $POOL_STAKE --active-stake $ACTIVE_STAKE --ledger-set $PERIOD --tz $TZ`

EPOCH=`jq .epoch <<< $LLOG`
echo "\`Epoch $EPOCH\` 🧙🔮:"

SLOTS=`jq .epochSlots <<< $LLOG`
IDEAL=`jq .epochSlotsIdeal <<< $LLOG`
PERFORMANCE=`jq .maxPerformance <<< $LLOG`
echo "\`$TICKER  - $SLOTS \`🎰\`,  $PERFORMANCE% \`🍀max, \`$IDEAL\` 🧱ideal"

# Save json format output to file
echo $LLOG > leaderlog-$EPOCH.out

# Display compact, readable format to screen
cat leaderlog-$EPOCH.out | jq '.assignedSlots[] | tostring' | \
   sed 's/\\//g'| awk -F'"' '{print $3 $4, $5 $6, $7 $8, $9 $10 $11 }'


